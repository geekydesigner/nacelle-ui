{"version":3,"sources":["./src/app/components/pure-task-list.component.ts","./src/environments/environment.ts","./src/app/components/task.component.ts","./src/app/components/inbox-screen.component.ts","./src/app/components/task.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/pure-inbox-screen.component.ts","./src/app/state/task.state.ts","./src/app/components/task-list.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Task } from '../models/task.model';\n@Component({\n  selector: 'app-pure-task-list',\n  template: `\n  <div class=\"list-items\">\n  <app-task\n    *ngFor=\"let task of tasksInOrder\"\n    [task]=\"task\"\n    (onArchiveTask)=\"onArchiveTask.emit($event)\"\n    (onPinTask)=\"onPinTask.emit($event)\"\n  >\n  </app-task>\n\n  <div *ngIf=\"tasksInOrder.length === 0 && !loading\" class=\"wrapper-message\">\n    <span class=\"icon-check\"></span>\n    <div class=\"title-message\">You have no tasks</div>\n    <div class=\"subtitle-message\">Sit back and relax</div>\n  </div>\n\n  <div *ngIf=\"loading\">\n    <div *ngFor=\"let i of [1, 2, 3, 4, 5, 6]\" class=\"loading-item\">\n      <span class=\"glow-checkbox\"></span>\n      <span class=\"glow-text\"> <span>Loading</span> <span>cool</span> <span>state</span> </span>\n    </div>\n  </div>\n</div>\n  `,\n})\nexport class PureTaskListComponent {\n  /** The list of tasks */\n    /**\n     * Component property to define ordering of tasks\n     */\n    tasksInOrder: Task[] = [];\n\n  /** Checks if it's in loading state */\n  @Input() loading = false;\n\n  /** Event to change the task to pinned */\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onPinTask = new EventEmitter<Event>();\n\n  /** Event to change the task to archived */\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onArchiveTask = new EventEmitter<Event>();\n\n   @Input()\n    set tasks(arr: Task[]) {\n    this.tasksInOrder = [\n        ...arr.filter(t => t.state === 'TASK_PINNED'),\n        ...arr.filter(t => t.state !== 'TASK_PINNED'),\n    ];\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { Task } from '../models/task.model';\n\n@Component({\n  selector: 'app-task',\n  template: `\n  <div class=\"list-item {{ task?.state }}\">\n  <label class=\"checkbox kirpal\">\n    <input\n      type=\"checkbox\"\n      [defaultChecked]=\"task?.state === 'TASK_ARCHIVED'\"\n      disabled=\"true\"\n      name=\"checked\"\n    />\n    <span class=\"checkbox-custom\" (click)=\"onArchive(task.id)\"></span>\n  </label>\n  <div class=\"title\">\n    <input\n      type=\"text\"\n      [value]=\"task?.title\"\n      readonly=\"true\"\n      placeholder=\"Input title\"\n    />\n  </div>\n  <div class=\"actions\">\n    <a *ngIf=\"task?.state !== 'TASK_ARCHIVED'\" (click)=\"onPin(task.id)\">\n      <span class=\"icon-star\"></span>\n    </a>\n  </div>\n</div>\n  `,\n})\nexport class TaskComponent {\n    @Input() task: Task;\n\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onPinTask = new EventEmitter<Event>();\n\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  onArchiveTask = new EventEmitter<Event>();\n /**\n  * Component method to trigger the onPin event\n  * @param id string\n  */\n onPin(id: any) {\n   this.onPinTask.emit(id);\n }\n /**\n  * Component method to trigger the onArchive event\n  * @param id string\n  */\n onArchive(id: any) {\n   this.onArchiveTask.emit(id);\n }\n}","import { Component } from '@angular/core';\nimport { Select } from '@ngxs/store';\nimport { TasksState } from '../state/task.state';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-inbox-screen',\n  template: `\n    <app-pure-inbox-screen [error]=\"error$ | async\"></app-pure-inbox-screen>\n  `,\n})\nexport class InboxScreenComponent {\n  @Select(TasksState.getError) error$: Observable<any>;\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxsModule } from '@ngxs/store';\n\nimport { TaskComponent } from './task.component';\nimport { TaskListComponent } from './task-list.component';\nimport { TasksState } from '../state/task.state';\nimport { PureTaskListComponent } from './pure-task-list.component';\n\n@NgModule({\n  imports: [CommonModule, NgxsModule.forFeature([TasksState])],\n  exports: [TaskComponent, TaskListComponent],\n  declarations: [TaskComponent, TaskListComponent, PureTaskListComponent],\n  providers: [],\n})\nexport class TaskModule {}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <app-inbox-screen></app-inbox-screen>\n  `\n})\nexport class AppComponent {\n  title = 'taskbox';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { TaskModule } from './components/task.module';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\n\nimport { AppComponent } from './app.component';\n\nimport { InboxScreenComponent } from './components/inbox-screen.component';\nimport { PureInboxScreenComponent } from './components/pure-inbox-screen.component';\n\n@NgModule({\n  declarations: [AppComponent, InboxScreenComponent, PureInboxScreenComponent],\n  imports: [\n    BrowserModule,\n    TaskModule,\n    NgxsModule.forRoot([]),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n    NgxsLoggerPluginModule.forRoot(),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-pure-inbox-screen',\n  template: `\n    <div *ngIf=\"error\" class=\"page lists-show\">\n      <div class=\"wrapper-message\">\n        <span class=\"icon-face-sad\"></span>\n        <div class=\"title-message\">Oh no!</div>\n        <div class=\"subtitle-message\">Something went wrong</div>\n      </div>\n    </div>\n\n    <div *ngIf=\"!error\" class=\"page lists-show\">\n      <nav>\n        <h1 class=\"title-page\">\n          <span class=\"title-wrapper\">Taskbox</span>\n        </h1>\n      </nav>\n      <app-task-list></app-task-list>\n    </div>\n  `,\n})\nexport class PureInboxScreenComponent {\n  @Input() error: any;\n}","import { State, Selector, Action, StateContext } from '@ngxs/store';\nimport { Task } from '../models/task.model';\n\n// Defines the actions available to the app\nexport const actions = {\n  ARCHIVE_TASK: 'ARCHIVE_TASK',\n  PIN_TASK: 'PIN_TASK',\n  // Defines the new error field we need\n  ERROR: 'APP_ERROR'\n};\n\nexport class ArchiveTask {\n  static readonly type = actions.ARCHIVE_TASK;\n\n  constructor(public payload: string) {}\n}\n\nexport class PinTask {\n  static readonly type = actions.PIN_TASK;\n\n  constructor(public payload: string) {}\n}\n// The class definition for our error field\nexport class AppError {\n  static readonly type = actions.ERROR;\n  constructor(public payload: boolean) {}\n}\n\n// The initial state of our store when the app loads.\n// Usually you would fetch this from a server\nconst defaultTasks = {\n  1: { id: '1', title: 'Something', state: 'TASK_INBOX' },\n  2: { id: '2', title: 'Something more', state: 'TASK_INBOX' },\n  3: { id: '3', title: 'Something else', state: 'TASK_INBOX' },\n  4: { id: '4', title: 'Something again', state: 'TASK_INBOX' },\n};\n\nexport class TaskStateModel {\n  entities: { [id: number]: Task };\n  error: boolean;\n}\n\n// Sets the default state\n@State<TaskStateModel>({\n  name: 'tasks',\n  defaults: {\n    entities: defaultTasks,\n    error: false\n  },\n})\nexport class TasksState {\n    @Selector()\n    static getAllTasks(state: TaskStateModel) {\n      const entities = state.entities;\n      return Object.keys(entities).map(id => entities[+id]);\n    }\n  \n    // Defines a new selector for the error field\n    @Selector()\n    static getError(state: TaskStateModel) {\n      const { error } = state;\n      return error;\n    }\n    //\n    // Triggers the PinTask action, similar to redux\n    @Action(PinTask)\n    pinTask({ patchState, getState }: StateContext<TaskStateModel>, { payload }: PinTask) {\n      const state = getState().entities;\n  \n      const entities = {\n        ...state,\n        [payload]: { ...state[payload], state: 'TASK_PINNED' },\n      };\n  \n      patchState({\n        entities,\n      });\n    }\n    // Triggers the PinTask action, similar to redux\n    @Action(ArchiveTask)\n    archiveTask({ patchState, getState }: StateContext<TaskStateModel>, { payload }: ArchiveTask) {\n      const state = getState().entities;\n  \n      const entities = {\n        ...state,\n        [payload]: { ...state[payload], state: 'TASK_ARCHIVED' },\n      };\n  \n      patchState({\n        entities,\n      });\n    }\n  // Function to handle how the state should be updated when the action is triggered\n    @Action(AppError)\n    setAppError({ patchState, getState }: StateContext<TaskStateModel>, { payload }: AppError) {\n    const state = getState();\n    patchState({\n        error: !state.error,\n    });\n    }\n}","import { Component } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { TasksState, ArchiveTask, PinTask } from '../state/task.state';\nimport { Task } from '../models/task.model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-task-list',\n  template: `\n    <app-pure-task-list\n      [tasks]=\"tasks$ | async\"\n      (onArchiveTask)=\"archiveTask($event)\"\n      (onPinTask)=\"pinTask($event)\"\n    ></app-pure-task-list>\n  `,\n})\nexport class TaskListComponent {\n  @Select(TasksState.getAllTasks) tasks$: Observable<Task[]>;\n\n  constructor(private store: Store) {}\n\n  /**\n   * Component method to trigger the archiveTask event\n   */\n  archiveTask(id: string) {\n    this.store.dispatch(new ArchiveTask(id));\n  }\n\n  /**\n   * Component method to trigger the pinTask event\n   */\n  pinTask(id: string) {\n    this.store.dispatch(new PinTask(id));\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}